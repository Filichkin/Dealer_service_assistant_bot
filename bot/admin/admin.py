import asyncio

from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import CallbackQuery, Message
from sqlalchemy.ext.asyncio import AsyncSession

from bot.admin.kbs import (
    admin_kb,
    admin_kb_back,
    service_management_kb,
    cancel_kb_inline,
    admin_confirm_kb,
    dell_service_kb
)
from bot.admin.schemas import PaymentModel, PaymentIDModelIDModel
from bot.admin.utils import process_dell_text_msg
from bot.config import settings, bot
from bot.dao.dao import PaymentDao, ServiceDao, UserDAO


admin_router = Router()


class AddService(StatesGroup):
    name = State()
    description = State()
    price = State()
    hidden_content = State()
    confirm_add = State()


@admin_router.callback_query(
        F.data == 'admin_panel',
        F.from_user.id.in_(settings.ADMIN_IDS)
    )
async def start_admin(call: CallbackQuery):
    await call.answer('–î–æ—Å—Ç—É–ø –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —Ä–∞–∑—Ä–µ—à–µ–Ω!')
    await call.message.edit_text(
        text='–í–∞–º —Ä–∞–∑—Ä–µ—à–µ–Ω –¥–æ—Å—Ç—É–ø –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å. '
        '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.',
        reply_markup=admin_kb()
    )


@admin_router.callback_query(
        F.data == 'statistic',
        F.from_user.id.in_(settings.ADMIN_IDS)
        )
async def admin_statistic(
    call: CallbackQuery,
    session_without_commit: AsyncSession
):
    await call.answer('–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...')
    await call.answer('üìä –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...')

    stats = await UserDAO.get_statistics(session=session_without_commit)
    total_summ = await PaymentDao.get_full_summ(session=session_without_commit)
    stats_message = (
        "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n"
        f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['total_users']}\n"
        f"üÜï –ù–æ–≤—ã—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {stats['new_today']}\n"
        f"üìÖ –ù–æ–≤—ã—Ö –∑–∞ –Ω–µ–¥–µ–ª—é: {stats['new_week']}\n"
        f"üìÜ –ù–æ–≤—ã—Ö –∑–∞ –º–µ—Å—è—Ü: {stats['new_month']}\n\n"
        f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤: {total_summ} —Ä—É–±.\n\n"
        "üïí –î–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç."
    )
    await call.message.edit_text(
        text=stats_message,
        reply_markup=admin_kb()
    )


@admin_router.callback_query(
        F.data == 'process_services',
        F.from_user.id.in_(settings.ADMIN_IDS)
        )
async def admin_process_products(
    call: CallbackQuery,
    session_without_commit: AsyncSession
):
    await call.answer('–†–µ–∂–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞–º–∏')
    all_services_count = await ServiceDao.count(session=session_without_commit)
    await call.message.edit_text(
        text=f'–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö {all_services_count} —Å–µ—Ä–≤–∏—Å–æ–≤.',
        reply_markup=service_management_kb()
    )


@admin_router.callback_query(
        F.data == 'delete_service',
        F.from_user.id.in_(settings.ADMIN_IDS)
        )
async def admin_process_start_dell(
    call: CallbackQuery,
    session_without_commit: AsyncSession
):
    await call.answer('–†–µ–∂–∏–º —É–¥–∞–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤')
    all_services = await ServiceDao.find_all(session=session_without_commit)

    await call.message.edit_text(
        text=f'–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö {len(all_services)} —Å–µ—Ä–≤–∏—Å–æ–≤. '
        f'–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ'
    )
    for service_data in all_services:

        service_text = (f'üõí –û–ø–∏—Å–∞–Ω–∏–µ —Å–µ–≤–∏—Å–∞:\n\n'
                        f'üîπ <b>–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞:</b> '
                        f'<b>{service_data.name}</b>\n'
                        f'üîπ <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>\n\n<b>'
                        f'{service_data.description}</b>\n\n'
                        f'üîπ <b>–¶–µ–Ω–∞:</b> <b>{service_data.price} ‚ÇΩ</b>\n'
                        f'üîπ <b>–û–ø–∏—Å–∞–Ω–∏–µ (–∑–∞–∫—Ä—ã—Ç–æ–µ):</b>\n\n<b>'
                        f'{service_data.hidden_content}</b>\n\n'
                        )
        await call.message.answer(
            text=service_text,
            reply_markup=dell_service_kb(service_data.id)
            )
